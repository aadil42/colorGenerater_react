{"version":3,"sources":["Context.js","Components/layout/heading.js","Components/layout/search.js","utilities/utility.js","Components/pallate/color-pallate.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","reducer","state","action","colors","Values","color","all","console","log","type","colorError","Provider","heading","dispatch","setState","placeHolderColor","this","value","props","children","Component","Consumer","Heading","className","Search","document","querySelector","placeholder","onClick","handleSearch","bind","deciToHex","c","toString","rgbToHex","r","g","b","ColorPallate","copyColor","index","navigator","clipboard","writeText","span","lastChild","data","append","setTimeout","remove","Fragment","count","map","background","rgb","join","hex","style","weight","App","placeholderColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2a1c5464.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport Values from 'values.js';\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n\r\ntry{\r\n  const ValueColor = new Values(action.color);\r\n  const colors = ValueColor.all(10);\r\n  console.log(colors);\r\n  switch(action.type) {\r\n    case 'CLICKED':\r\n      return{\r\n        ...state,\r\n        colorError: false,\r\n        colors: colors\r\n      }\r\n  }\r\n}catch {\r\n  return{\r\n    colorError: true\r\n  }\r\n}\r\n\r\n}\r\n\r\nclass Provider extends Component {\r\n\r\n  state = {\r\n    heading : 'color generater',\r\n    dispatch: (action) => {\r\n      this.setState((state) => {\r\n        return reducer(state, action);\r\n      })\r\n    },\r\n   colors: '#f15025',\r\n   placeHolderColor: '#f15025',\r\n   colorError: false,\r\n  }\r\n\r\n  componentWillMount() {\r\n     console.log('this is calling');\r\n    this.state.dispatch({type:'CLICKED', color: this.state.placeHolderColor});\r\n  }\r\n  render() {\r\n    return(\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst Consumer = Context.Consumer;\r\nexport default Provider;\r\nexport {Consumer};\r\n","const Heading = (props) => {\r\n  const {heading} = props;\r\n  return(\r\n   <h1 className=\"heading\">{heading}</h1>\r\n  );\r\n}\r\n\r\nexport default Heading;","import React, {Component} from 'react';\r\nimport {Consumer} from '../../Context';\r\n\r\nclass Search extends Component {\r\n\r\n  handleSearch(dispatch) {\r\n  const chosenColor = document.querySelector('.searchInput').value;\r\n  dispatch({type:'CLICKED', color: chosenColor});\r\n\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <Consumer>\r\n        {value => {\r\n          const {dispatch, placeHolderColor} = value; \r\n          const {colorError} = value; \r\n          console.log(colorError);\r\n          return( \r\n            <div className=\"searchContainer\">\r\n                <input  placeholder={placeHolderColor} type=\"text\" className={`searchInput ${colorError ? 'error' : ''}`}/>\r\n                <button onClick={this.handleSearch.bind(this, dispatch)} className=\"searchBtn\">get</button>\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Search;","\r\nconst deciToHex = (c) => {\r\n\r\n  if(c > 0 && c < 16) {\r\n  c =  c.toString(16);\r\n    return '0' + c;\r\n  } else {\r\n  c =  c.toString(16);\r\n    return c;\r\n  }\r\n// c = c.toString(16);\r\n\r\n// return c;\r\n} \r\nconst rgbToHex = (r, g, b) => {\r\n\r\n  return '#' + deciToHex(r) + deciToHex(g) + deciToHex(b)\r\n}\r\n\r\nexport default rgbToHex;","import React, { Component } from 'react';\r\nimport {Consumer} from '../../Context';\r\nimport rgbToHex from '../../utilities/utility';\r\n\r\nclass ColorPallate extends Component {\r\n  \r\n  copyColor = (color, index) => {\r\n    navigator.clipboard.writeText(color);\r\n   \r\n    const span = document.querySelector(`.key-${index}`);\r\n    const checker = span.lastChild;\r\n    // console.log(checker);\r\n    if(checker.data !== '    COPIED TO CLIPBOARD') {\r\n      span.append('    COPIED TO CLIPBOARD');\r\n    }\r\n\r\n    setTimeout(() => {\r\n\r\n       if(span.lastChild.data === '    COPIED TO CLIPBOARD') {\r\n         span.lastChild.remove();\r\n       }\r\n    }, 2000);\r\n\r\n  }\r\n\r\n  render() {\r\n    return(\r\n     <React.Fragment>\r\n       <Consumer>\r\n         {value => {\r\n           const {colors} = value;\r\n           const {count} = value;\r\n           return(\r\n            <div className=\"colorContainer\">\r\n              {colors.map((color, index) => {\r\n                const background = color.rgb.join(',');\r\n                const hex  = rgbToHex(...(color.rgb));\r\n                if(color.type === 'tint') {\r\n                  return(\r\n                    <span key={index} onClick={this.copyColor.bind(this, hex, index)} style={{background:`rgb(${background})`, color:'black'}} className={`indiColor key-${index}`}>\r\n                      {color.weight}% <br/>\r\n                      {hex} \r\n                    </span>\r\n                  )\r\n                } else if(color.type === 'shade') {\r\n                  return(\r\n                    <span key={index} onClick={this.copyColor.bind(this, hex, index)} style={{background:`rgb(${background})`, color:'white'}} className={`indiColor key-${index}`}>\r\n                      {color.weight}% <br/>\r\n                      {hex}\r\n                    </span>\r\n                  )\r\n                }else {\r\n                  return(\r\n                    <span key={index} onClick={this.copyColor.bind(this, hex, index)} style={{background:`rgb(${background})`, color:'blue'}} className={`indiColor key-${index}`}>\r\n                      {color.weight}% <br/>\r\n                      {hex} \r\n                    </span>\r\n                  )\r\n                }\r\n              })}\r\n            </div>\r\n            );\r\n         }}\r\n       </Consumer>\r\n     </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ColorPallate;","import React from 'react';\nimport './MannualCss/style.css';\nimport Provider from './Context';\nimport  {Consumer} from './Context';\nimport Heading from './Components/layout/heading';\nimport Search from './Components/layout/search';\nimport ColorPallate from './Components/pallate/color-pallate';\nfunction App() {\n  return (\n    <Provider>\n      <Consumer>\n           {value => {\n             const {heading} = value;\n             const {colors} = value;\n             const {dispatch} = value; \n             const {placeholderColor} = value;\n             return(\n               <React.Fragment>\n                  <Heading heading={heading} />\n                  <Search />\n                  <ColorPallate placeholder={placeholderColor} dispatch={dispatch} colors={colors} />\n               </React.Fragment>\n              )\n           }}\n      </Consumer>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}